function e(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}function n(e,n,t,r,o,a,i){try{var s=e[a](i),c=s.value}catch(e){return void t(e)}s.done?n(c):Promise.resolve(c).then(r,o)}function t(e){return function(){var t=this,r=arguments;return new Promise((function(o,a){var i=e.apply(t,r);function s(e){n(i,o,a,s,c,"next",e)}function c(e){n(i,o,a,s,c,"throw",e)}s(void 0)}))}}function r(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,o,a=[],i=!0,s=!1;try{for(t=t.call(e);!(i=(r=t.next()).done)&&(a.push(r.value),!n||a.length!==n);i=!0);}catch(e){s=!0,o=e}finally{try{i||null==t.return||t.return()}finally{if(s)throw o}}return a}}(e,n)||o(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function o(n,t){if(n){if("string"==typeof n)return e(n,t);var r=Object.prototype.toString.call(n).slice(8,-1);return"Object"===r&&n.constructor&&(r=n.constructor.name),"Map"===r||"Set"===r?Array.from(r):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?e(n,t):void 0}}var a=this&&this.__generator||function(e,n){var t,r,o,a,i={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return a={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function s(e){return function(n){return c([e,n])}}function c(a){if(t)throw new TypeError("Generator is already executing.");for(;i;)try{if(t=1,r&&(o=2&a[0]?r.return:a[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,a[1])).done)return o;switch(r=0,o&&(a=[2&a[0],o.value]),a[0]){case 0:case 1:o=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,r=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!(o=i.trys,(o=o.length>0&&o[o.length-1])||6!==a[0]&&2!==a[0])){i=0;continue}if(3===a[0]&&(!o||a[1]>o[0]&&a[1]<o[3])){i.label=a[1];break}if(6===a[0]&&i.label<o[1]){i.label=o[1],o=a;break}if(o&&i.label<o[2]){i.label=o[2],i.ops.push(a);break}o[2]&&i.ops.pop(),i.trys.pop();continue}a=n.call(e,i)}catch(e){a=[6,e],r=0}finally{t=o=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}};import i,{useState as s}from"react";import"reactflow/dist/style.css";var c=function(){var e=t((function(){var e,n=arguments;return a(this,(function(t){switch(t.label){case 0:return e=n.length>1&&void 0!==n[1]?n[1]:{},[4,fetch(n.length>0&&void 0!==n[0]?n[0]:"",{method:"POST",mode:"cors",cache:"no-cache",credentials:"same-origin",headers:{"Content-Type":"application/json"},redirect:"follow",referrerPolicy:"no-referrer",body:JSON.stringify(e)})];case 1:return[2,t.sent().json()]}}))}));return function(){return e.apply(this,arguments)}}();import{Widget as u,addResponseMessage as l,toggleMsgLoader as d}from"react-chat-widget";var f=i.memo((function(e){var n=e.selectedCode,o=e.sourceCode,f=e.setSourceCode,p=function(){var e=t((function(){return a(this,(function(e){switch(e.label){case 0:return[4,fetch("/api/v1/device/list")];case 1:return[4,e.sent().json()];case 2:return[2,e.sent()]}}))}));return function(){return e.apply(this,arguments)}}(),h=function(){var e=t((function(){var e;return a(this,(function(n){switch(n.label){case 0:return[4,p()];case 1:return e=n.sent(),[2,"My program includes a function to control IOT devices: \n\n    devicePub(deviceName: string, moduleType: string, moduleName: string, message: string);\n    \n    Currently I have available the following devices: devices = '''".concat(e,'\'\'\'\n    \n    The keys are the available devices, by default take the device called "mydevice". \n    The keys inside of each device are the modules connected to the device. Each module has a key named "type" which indicates the type of the module.\n    The module of type "switch" accepts the message "ON" and "OFF". \n    \n    An example would be: \n    devices = {"mydevice":{"rele":{"mqttMessages":{"options":["ON","OFF"]}, "type":"switch"}}}\n\n    devicePub("mydevice", "switch", "rele", "OFF");\n\n    To create an api endpoint I do:\n        app.get("/cloudapi/v1/rele/off", (req, res) => {\n            //api code goes here\n            res.send(...); //send response\n    });\n\n    Given the example and the value of devices=').concat(e,": \n    ")]}}))}));return function(){return e.apply(this,arguments)}}(),v=function(){var e=t((function(e){var t,r,i;return a(this,(function(a){switch(a.label){case 0:return d(),r="I have the following javascript program:\n"+o+"\n",[4,h()];case 1:return t=r+a.sent(),n!=o&&(t+="and I have a doubt about this specific part: \n"+n+"\n the doubt is: "),console.log(t+e),[4,c("/api/v1/openAI/assistant",{description:t+e})];case 2:return(i=a.sent())&&i.response&&l(i.response),d(),[2]}}))}));return function(n){return e.apply(this,arguments)}}(),y=function(){var e=t((function(e){var n,t,r,i;return a(this,(function(a){switch(a.label){case 0:return d(),n="Please give me the js code. Only reply with js code. Do not include reasonings or explanations, just the code and nothing else. Be direct, include only code in your response. Please, do not include anything that is not code in your response, not a single word. Give me the code in one single file, not separated in different parts. I already have required the express library, and my app is instantiated. Do not include anything before or after the code, no single sentence or word, just code.",r=["/api/v1/openAI/assistant"],i={},[4,h()];case 1:return[4,c.apply(void 0,r.concat([(i.description=a.sent()+e+n,i)]))];case 2:return(t=a.sent())&&t.response&&(l("Done!"),f(o+" "+t.response)),d(),[2]}}))}));return function(n){return e.apply(this,arguments)}}(),g=function(){var e=t((function(e){var n,t;return a(this,(function(r){return(null==e?void 0:e.startsWith("/generate"))?(n=e.replace(/^\/generate/,"generate"),y(n)):"/help"==e?(t=["**/generate [prompt]** generates code specifying the context at prompt field","**/help** obtain help"].join("\n\n"),l(t)):v(e),[2]}))}));return function(n){return e.apply(this,arguments)}}(),m=r(s(!0),2),b=(m[0],m[1]),w=r(s(),2),A=w[0],I=w[1];return i.useEffect((function(){A&&(l("ðŸ‘‹ Welcome to **Protofy AI Assistant**"),l("Use **/generate [prompt]** to generate code.\n\nUse **/help** to obtain all commands"))}),[A]),i.createElement(u,{handleToggle:function(e){b(!e),void 0===A&&e&&I(!0)},title:"AI Assitant",subtitle:"Ask questions or generate code",handleNewUserMessage:g})}));export{f as default};